<% if !@comment.persisted? %>
  <% comment.learner = current_learner %>
<% end %>

<div class="commentfield_container">

  <% if defined?(@errors) && @errors.present? %>
    <div class="alert alert-error">
      <p><%= @errors %></p>
    </div>
  <% end %>

<%= form_for @comment, html: {class: "no-top-margin"}, remote: true do |f| %>
  <%= avatar_for_learner(comment.learner, {image_size: :thumb})  %>
  
  <div class="commentfield">
    <%= f.text_area :content, cols: 20, rows: 5, class: "wysihtml5"} %>
    
    
    <!-- parent_comment being present means that we called this template from the parent comment's view page 
         and we're passing the parent_comment id along to the request to edit that comment so we can then 
         render the correct thing after the comment edit is executed, because the originating page is a comment and it's 
         children and not the whole list of comments -->
    
     <% if comment.ancestry.present? %>
       <%= hidden_field_tag 'parent_comment_id', comment.ancestry %>
     <% end %>
  </div>
  
  <% if @comment.persisted? %>
    <%= f.submit "Update comment", disable_with: 'Saving...', id: 'material-submit', class: 'btn btn-primary' %>
    <%= link_to 'Cancel', cancel_edit_material_links_path(material_link_id: @material_link.id), class: 'btn', remote: true %>
    <%= link_to 'delete', material_link_path(@material_link.id), class: "btn btn-danger pull-right", confirm: 'Are you sure you want to delete this?', method: :delete, remote: true %>
  <% else %>
    <%= f.submit "Post comment", disable_with: 'Saving...', id: 'material-submit', class: 'btn btn-primary' %>
    <%= link_to_function 'Cancel', '', {class: 'btn', id: 'cancel-comment-add-form'} %>
  <% end %>

<% end %>

</div>
